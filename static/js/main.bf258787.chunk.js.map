{"version":3,"sources":["pages/Stories/component/Story.js","pages/Stories/Stories.js","pages/Stories/index.js","pages/Me/Me.js","pages/Me/index.js","pages/Work/index.js","pages/Work/Work.js","pages/Projects/index.js","pages/Projects/Projects.js","pages/index.js","pages/Pages.js","components/Header/index.js","components/Header/header.js","components/Layout/index.js","components/Layout/layout.js","App.js","serviceWorker.js","index.js","pages/Me/me.jpg"],"names":["Story","props","handleClick","setState","isOpen","close","state","this","title","summary","text","overrides","Root","style","width","onClick","onClose","kind","React","create_stories","key","map","story","Stories","display","gridTemplateColumns","justifyItems","gridGap","margin","itemProps","backgroundColor","alignItems","justifyContent","middleItemProps","Block","$theme","Me","flexGridColumnCount","flexGridColumnGap","flexGridRowGap","marginBottom","src","avatar","source","Work","Projects","Pages","basename","process","exact","path","Header","$align","ALIGN","left","href","center","right","Layout","user","children","App","Boolean","window","location","hostname","match","engine","Styletron","ReactDOM","render","value","theme","LightTheme","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.bf258787.chunk.js","sourcesContent":["import * as React from 'react';\nimport { Card, StyledBody } from \"baseui/card\";\nimport { Button } from 'baseui/button';\nimport { Modal, ModalHeader, ModalBody, ModalButton, ModalFooter, FocusOnce } from \"baseui/modal\";\nexport default class Story extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { isOpen: false }\n    }\n    handleClick = () => {\n        this.setState({ isOpen: true });\n    }\n    close = () => {\n        this.setState({ isOpen: false });\n    }\n    render() {\n        const { title, summary, text } = this.props;\n        return (\n            <React.Fragment>\n                <Card overrides={{ Root: { style: { width: '200px' } } }}>\n                    <StyledBody>\n                        <h2>\n                            {title}\n                        </h2>\n                        {summary}\n                        <Button onClick={this.handleClick}>Read More</Button>\n                        <Modal onClose={this.close} isOpen={this.state.isOpen}>\n                            <FocusOnce>\n                                <ModalHeader><h2>{title}</h2></ModalHeader>\n                            </FocusOnce>\n                            <ModalBody>\n                                <p>\n                                    <h3>{summary}</h3>\n                                    {text}\n                                </p>\n                            </ModalBody>\n                            <ModalFooter>\n                                <ModalButton kind='primary' onClick={this.close}>\n                                    Close\n                                </ModalButton>\n                            </ModalFooter>\n                        </Modal>\n                    </StyledBody>\n                </Card>\n            </React.Fragment>\n        )\n    }\n}\n\n","import * as React from \"react\";\nimport { Block } from \"baseui/block\";\nimport Story from \"./component/Story\";\n\nconst stories = [\n    {\n        key: \"First\",\n        title: \"Setting up my Website\",\n        summary: \"Creation of my own website using Base web from Uber\",\n        text: <p><p>Been working on this for a day now during the corona period here in sweden. Been thinking about creating\n        my own website for a while now and when I stumbled upon Ubers Base web I tought that now it is time to finally create one.\n        Not to comfortable with javascript (or react for that matter) either, so this seems like a good training session as well. This is me just testing\n        out to write a story, hopefully it seems okay!</p> <p>Currently these stories are written inside the function,\n        going to find a better solution going forward. But this will suffice for now</p></p>\n\n    },\n    {\n        key: 'q3f',\n        title: 'First',\n        summary: 'Quick Summary',\n        text: 'A  bunch of text that is going to be shown in a pop up, should probably be divided into  multiple paragraphs but hey'\n    },\n    {\n        key: 'svlmw4',\n        title: 'Second',\n        summary: 'Quick Summary',\n        text: 'A  bunch of text that is going to be shown in a pop up, should probably be divided into  multiple paragraphs but hey'\n    },\n    {\n        key: 'svÃ¶',\n        title: 'Third',\n        summary: 'Quick Summary',\n        text: 'A  bunch of text that is going to be shown in a pop up, should probably be divided into  multiple paragraphs but hey'\n    },\n    {\n        key: 'mlfv',\n        title: 'Fourth',\n        summary: 'Quick Summary',\n        text: 'A  bunch of text that is going to be shown in a pop up, should probably be divided into  multiple paragraphs but hey'\n    }\n]\nlet create_stories = stories.map(story => <Story title={story.title} summary={story.summary} text={story.text} key={story.key} />)\n//let create_story = Story(stories[0].title, stories[0].summary, stories[0].text);\nexport default class StoryGrid extends React.Component {\n    render() {\n        return (\n            <React.Fragment>\n                <Block\n                    display=\"grid\"\n                    gridTemplateColumns=\"repeat(auto-fill, minmax(280px, 1fr))\"\n                    justifyItems=\"center\"\n                    gridGap=\"scale1000\"\n                    margin=\"scale1000\"\n                >\n                    {create_stories}\n                </Block>\n            </React.Fragment>\n        )\n    }\n}","import Stories from \"./Stories\";\nexport default Stories;","import * as React from \"react\";\nimport Markdown from 'react-markdown';\nimport avatar from './me.jpg';\nimport { FlexGrid, FlexGridItem } from 'baseui/flex-grid';\nconst itemProps = {\n    backgroundColor: 'mono200',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n};\nconst middleItemProps = {\n    ...itemProps,\n    overrides: {\n        Block: {\n            style: ({ $theme }) => ({\n                backgroundColor: 'mono100',\n            }),\n        },\n    },\n};\n\nconst markdown = \"# **About me** \\n \\\n\\\nElectrical Engineer working with autonomous vehicles at[Zenuity](www.zenuity.com)\\\n\\\n\\n \\n Other Interest are Music, coding, etc etc\";\n\nexport default () => {\n    return (\n        <div>\n            <FlexGrid flexGridColumnCount={3}\n                flexGridColumnGap=\"scale800\"\n                flexGridRowGap=\"scale800\"\n                marginBottom=\"scale800\">\n                <FlexGridItem {...itemProps}><div><img src={avatar} /></div></FlexGridItem>\n                <FlexGridItem {...middleItemProps} />\n                <FlexGridItem {...itemProps}><div><Markdown source={markdown} /></div></FlexGridItem>\n            </FlexGrid>\n        </div>\n    )\n}","import Me from \"./Me\";\nexport default Me;","import Work from \"./Work\";\nexport default Work;","import * as React from \"react\";\nimport Markdown from 'react-markdown';\n\nconst markdown = \"## Coming soon\";\n\nexport default class Work extends React.Component {\n    render() {\n        return (\n            <div style={{ 'text-align': \"center\" }}>\n                <Markdown source={markdown} />\n            </div>\n        )\n\n    }\n}","import Projects from \"./Projects\";\nexport default Projects;","import * as React from \"react\";\nimport Markdown from 'react-markdown';\n\nconst markdown = \"## Coming soon\";\n\nexport default class Projects extends React.Component {\n    render() {\n        return (\n            <div style={{ 'text-align': \"center\" }}>\n                <Markdown source={markdown} />\n            </div>\n        )\n\n    }\n}","import Pages from \"./Pages\";\nexport default Pages;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Stories from \"./Stories\";\nimport Me from \"./Me\"\nimport Work from \"./Work\"\nimport Projects from \"./Projects\"\n\nconst Pages = () => {\n    return (\n        <Router basename={process.env.PUBLIC_URL}>\n            <Switch>\n                <Route exact path=\"/Stories\">\n                    <Stories />\n                </Route>\n                <Route exact path=\"/Projects\">\n                    <Projects />\n                </Route>\n                <Route exact path=\"/Me\">\n                    <Me />\n                </Route>\n                <Route exact path=\"/Work\">\n                    <Work />\n                </Route>\n            </Switch>\n        </Router>\n    );\n};\n\nexport default Pages;","import Header from \"./header\";\nexport default Header;","import * as React from \"react\";\nimport {\n    HeaderNavigation,\n    ALIGN,\n    StyledNavigationItem as NavigationItem,\n    StyledNavigationList as NavigationList,\n} from \"baseui/header-navigation\";\nimport { StyledLink as Link } from \"baseui/link\";\nexport default () => (\n    <HeaderNavigation>\n        <NavigationList $align={ALIGN.left}>\n            <h1>\n                <NavigationItem>\n                    <Link href=\"/\" style={{ \"text-decoration\": \"none\" }}>\n                        Andreas Fredh-Ojala\n                    </Link>\n                </NavigationItem>\n            </h1>\n        </NavigationList>\n        <NavigationList $align={ALIGN.center}>\n            <NavigationItem>\n                <Link href=\"Stories\">Stories</Link>\n            </NavigationItem>\n        </NavigationList>\n        <NavigationList $align={ALIGN.center}>\n            <NavigationItem>\n                <Link href=\"Projects\">Projects</Link>\n            </NavigationItem>\n        </NavigationList>\n        <NavigationList $align={ALIGN.right}>\n            <NavigationItem>\n                <Link href=\"Work\">Current Work</Link>\n            </NavigationItem>\n        </NavigationList>\n        <NavigationList $align={ALIGN.right}>\n            <NavigationItem>\n                <Link href=\"Me\">About Me</Link>\n            </NavigationItem>\n        </NavigationList>\n        <NavigationList $align={ALIGN.right}>\n            <NavigationItem>\n\n            </NavigationItem>\n        </NavigationList>\n    </HeaderNavigation >\n)\n","import Layout from \"./layout\";\nexport default Layout;","import * as React from \"react\";\nimport Header from \"../Header\";\n\nconst Layout = ({ user, children }) => {\n    return (\n        <div>\n            <Header></Header>\n            <div>{children}</div>\n        </div>\n    );\n};\n\nexport default Layout","import * as React from 'react';\nimport './App.css';\nimport Pages from \"./pages\";\nimport Layout from \"./components/Layout\";\nfunction App() {\n  return (\n    <div>\n      <Layout />\n      <Pages />\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\n\nimport { Provider as StyletronProvider } from \"styletron-react\";\nimport { Client as Styletron } from \"styletron-engine-atomic\";\nimport { LightTheme, BaseProvider } from \"baseui\";\n\nconst engine = new Styletron();\n\n\n// const primitives = {\n//   accent: '#F127E4', // hot pink\n//   accent50: '#FDEDFC',\n//   accent100: '#FCD3F9',\n//   accent200: '#F89FF3',\n//   accent300: '#F45AEA',\n//   accent400: '#F127E4',\n//   accent500: '#B71DAD',\n//   accent600: '#901788',\n//   accent700: '#600F5B',\n// };\n// const theme = createTheme(primitives);\n\nReactDOM.render(\n  <StyletronProvider value={engine}>\n    <BaseProvider theme={LightTheme}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </BaseProvider>\n  </StyletronProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/me.2b6a1cfc.jpg\";"],"sourceRoot":""}